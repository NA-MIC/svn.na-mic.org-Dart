<!-- generated by Jaxor at Tue Dec 21 12:58:45 EST 2004 -->
<jaxor package="dart.server.wrap">
  <import name="dart.server.wrapimpl.*"/>
  <entity name="track" alias="Track" >
    <primary-key autoassign="true">
      <column name="trackid" type="Long" alias="TrackId"/>
    </primary-key>
    <column name="name" type="String" nullable="true" alias="Name"/>
    <column name="starttime" type="java.sql.Timestamp" nullable="true" alias="StartTime"/>
    <column name="endtime" type="java.sql.Timestamp" nullable="true" alias="EndTime"/>
    <column name="nexttrackid" type="Long" nullable="true" alias="NextTrackId"/>
    <column name="lasttrackid" type="Long" nullable="true" alias="LastTrackId"/>
    
    <!-- Contained Submissions -->
    <list-ref table="Submission" find="where trackid = ? order by timestamp">
      <key source="TrackId"/>
    </list-ref>
    <!-- Query by submissionid and name -->
    <query name="selectIntersecting" query="select * from track where name = ? and starttime &lt;= ? and endtime &gt; ? ">
      <param name="name" type="String"/>
      <param name="t1" type="java.sql.Timestamp"/>
      <param name="t2" type="java.sql.Timestamp"/>
    </query>
    <!-- Query by time -->
    <query name="selectIntersecting" query="select * from track where starttime &lt;= ? and endtime &gt; ? ">
      <param name="t1" type="java.sql.Timestamp"/>
      <param name="t2" type="java.sql.Timestamp"/>
    </query>
    <!-- Find last track -->
    <method name="selectLastTrackList" type="TrackList" modifier="public">
      TrackFinderBase finder = new TrackFinderBase ( getJaxorContext() );
      return finder.selectByTrackIdList ( getLastTrackId() );
    </method>
    <!-- Find next track -->
    <method name="selectNextTrackList" type="TrackList" modifier="public">
      TrackFinderBase finder = new TrackFinderBase ( getJaxorContext() );
      return finder.selectByTrackIdList ( getNextTrackId() );
    </method>
    <!-- Utility methods -->
    <method name="hasNextTrackId" type="boolean" modifier="public">
      return ( getNextTrackId() != null );
    </method>
    <method name="hasLastTrackId" type="boolean" modifier="public">
      return ( getLastTrackId() != null );
    </method>
  </entity>
</jaxor>
